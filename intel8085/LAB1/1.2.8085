; E -> SECONDS COUNTER
; D -> INTR_COUNTER
; B-C -> DELAY
; MEM[900H] :: #INTRS
; MEM[901H] = {0: INTR DISABLED, 1: INTR ENABLED}

	IN 10H 		; MEM LIMITATIONS
	MVI A,08H	; Set interupt mask
	SIM
	MVI E,FFH 	; WE ICREMENT FIRST, SO AT FIRST PASS E WILL BE 0
	MVI D,00H
START:	
	DI
	MVI A,00H	;Disabled interrupts
	STA 0901H
	LDA 2000H	;check input port and if msb is 1 enable interupt
	RLC			;else disable it and move on with calculations
	JNC NO_INT
	EI 
	MVI A,01H	;If an interrupt was done between di-ei 
	STA 0901H	;then the intr routine will return
NO_INT:
	INR E		;increment counter and if count is CNTR==16 (decimal)
	MOV A,E		;reset counter
	CPI 10H		; IS A==16(decimal) ?
	JNZ OUT_DEL
	MVI A,00H 	; RESET
	MVI E,00H
OUT_DEL:		;after that perform output and implement a 0,2 delay
	CMA 		; A = ~A
	STA 3000H 	; SHOW ON LEDS
	LXI B,00C8H		;;  maybe implement delay with repeating display of (BC)=200(decimal)
	CALL DELB		;;  intr_counter
	JMP START


;Increase intr_counter and if >15 then reset
;Then display result on the 7 seg and continue counting 
;until the next interupt
INTR_ROUTINE:		
	PUSH PSW
	PUSH D
	PUSH B
	LDA 0901H	;check if an interrupt was requested when interrupts
	CPI 00H		;was disabled
	JZ RETURN
	LDA 0900H 	; # INTRS
	INR A 		; #INTRS++
	STA 0900H	; MEM[900H] = #INTRS			
	CPI 10H
	JNZ DOCALL
	MVI A,00H 	; RESET
	STA 0900H
DOCALL:
	CALL DISPLAY
RETURN:
	POP B
	POP D
	POP PSW	
	EI
	RET

DISPLAY:		;Display intr counter to the first from left 7seg
	LXI H,0A05H
	MOV M,A
	MVI L,00H
	XCHG		;D-E has adress 0A00H
	CALL STDM	;STDM changes all the regs
	CALL DCD
	RET	

END